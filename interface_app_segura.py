import streamlit as st
from pathlib import Path

# Ocultar barra superior e rodap√© do Streamlit
st.markdown("""
    <style>
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    </style>
""", unsafe_allow_html=True)

# Fun√ß√£o para navega√ß√£o entre p√°ginas
def redirecionar_para(pagina):
    st.experimental_set_query_params(pagina=pagina)
    st.experimental_rerun()

# P√°gina 1 - Login
def exibir_login():
    st.markdown('<div style="display:flex; flex-direction:column; align-items:center;">', unsafe_allow_html=True)
    st.markdown("<h2>Entrevista IA</h2>", unsafe_allow_html=True)
    email = st.text_input("Email ID")
    senha = st.text_input("Password", type="password")
    lembrar = st.checkbox("Remember me")
    if st.button("LOGIN"):
        if email == "admin@entrevista.com" and senha == "123456":
            st.success("Login realizado com sucesso!")
            redirecionar_para("upload")
        else:
            st.error("Credenciais inv√°lidas. Tente novamente.")
    st.markdown('</div>', unsafe_allow_html=True)

# P√°gina 2 - Upload do curr√≠culo e link da reuni√£o
def exibir_upload():
    st.markdown("<h2>P√°gina 2 - Upload e Link da Reuni√£o</h2>", unsafe_allow_html=True)
    st.markdown("üìé Adicione seu curr√≠culo ou anexo")
    arquivo = st.file_uploader("Drag and drop file here", type=["pdf", "docx", "txt"])
    if arquivo is not None:
        st.success(f"Arquivo {arquivo.name} carregado com sucesso!")

    st.markdown("üîó Adicione o link da reuni√£o")
    link_reuniao = st.text_input("Cole o link da reuni√£o aqui")
    
    if st.button("Confirmar e entrar na reuni√£o"):
        if arquivo and link_reuniao:
            st.session_state["curriculo"] = arquivo.name
            st.session_state["link"] = link_reuniao
            redirecionar_para("entrevista")
        else:
            st.warning("Por favor, fa√ßa upload do curr√≠culo e adicione o link da reuni√£o.")
    if st.button("Voltar ao login"):
        redirecionar_para("login")

# P√°gina 3 - Simula√ß√£o da entrevista
def exibir_entrevista():
    st.markdown("<h2>Simula√ß√£o de Entrevista</h2>", unsafe_allow_html=True)
    st.write("Curr√≠culo recebido:", st.session_state.get("curriculo", "(n√£o informado)"))
    st.write("Link da reuni√£o:", st.session_state.get("link", "(n√£o informado)"))
    st.markdown("""
    <b>A entrevista ser√° iniciada agora.</b>  
    Mantenha a postura e boa sorte!  
    (Aqui voc√™ pode colocar uma simula√ß√£o ou instru√ß√µes interativas)
    """, unsafe_allow_html=True)
    if st.button("Finalizar"):
        redirecionar_para("login")

# Controlador de p√°ginas
param = st.experimental_get_query_params()
pagina = param.get("pagina", ["login"])[0]

if pagina == "login":
    exibir_login()
elif pagina == "upload":
    exibir_upload()
elif pagina == "entrevista":
    exibir_entrevista()
